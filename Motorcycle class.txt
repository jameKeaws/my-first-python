class Motorcycle:
    is_engine_on = False
    is_headlight_on = False
    is_driving = False
    make = None
    model = None
    
    def __init__(self, make, model):
        self.make = make
        self.model = model
    
    def turn_engine_on(self):
        print('Turning engine on')
        self.is_engine_on = True
    
    def turn_engine_off(self):
        print('Turning engine off')
        if (self.is_driving):
             print('You turned engine off while driving and crashed')
             return
        else:
            self.is_engine_on = False
            print('You have successfully turned the engine off')
    
    def turn_headlight_on(self):
        print('Turning headlights on')
        self.is_headlight_on = True
        
    def turn_headlight_off(self):
        print('Turning headlights off')
        self.is_headlight_on = False
        
    def start_driving(self):
        print('Trying to start driving')
        if not self.is_engine_on:
            print("You can't start driving without turning the engine on")
            return
        else:
            print("Starting to drive")
            self.is_driving = True
            
    def stop_driving(self):
        print('Stop driving')
        self.is_driving = False
        
    def lean(self, direction):
        if not self.is_driving:
            print('You leaned while not driving and crashed')
            return
        
        print(f'Leaning towards {direction}')
    
    def turn_handlebars(self, direction):
        print(f'Turning the handle bars towards {direction}')
        
    def turn(self, direction):
        if (direction=='left'):
            self.turn_handlebars('right')
            self.lean('left')
        elif (direction=='right'):
            self.turn_handlebars('left')
            self.lean('right')
        else:
            print("Didn't understand the direction")
        
    def __repr__(self):
        return(f'{self.make} {self.model} with engine '
                f'{"on" if self.is_engine_on else "off"} '
                f'and headlight {"on" if self.is_headlight_on else "off"} ')